.page-id-19996, .home {
  .qodef-content {
    @include has-full-pseudo(true);
    background: $brand-white;    
    &::before {
      position: fixed;
      width: 100vw;
      height: 100vh;
      left: 0;      
      z-index: -1;
      background: transparent url(../img/hero-dots.png) !important; 
      background-size: cover;
      opacity: .25;
    }    
  }
  

  /* override font sizes */
  h1 {
    font-size: $font__size-xxxl * 1.3;     
    line-height: 1.35;
    font-weight: 300;
  }  
  
  h2 {
    font-size: $font__size-xxl * 1.3;  
    text-align: center;
    max-width: 900px;
    margin: 1em auto $gutter*3 auto;
  }
  
  .qodef-container-inner > p {
    max-width: 1000px;
    margin: auto;
    text-align: center;
  }
  

	.qodef-content-inner .qodef-container {
		background: transparent;
		.fc-hero+.fc-features{
			@media #{$breakpoint-sm-dn} {
				margin-bottom: $gutter*2;
			}
		}
	}

	.fc-teaser-grid.customer-block, .fc-portfolio-view{
			margin-top: $gutter*4 !important;
	}
	.fc-portfolio-view {
			margin-bottom: $gutter*4 !important;  	
	}
	

  .fc-hero {

  @media #{$breakpoint-md-up} {
	  &__main-content{
		  padding-bottom: 70px;
	  }

		&__headline{
			margin-top: 30px;
			margin-bottom: 15px;
		}

		&__detail{
			margin-top: 70px;
		}
	}
	
	@include row();   
  margin-left: 0;
  margin-right: 0;
  padding: 0;
	
	&__inner {
    @include row();    	
  	padding: 0;
  	background-color: transparent;
	}
	
  position: relative;   
  margin-top: -100px - $gutter;
  margin-bottom: 100px;
  padding-top: 110px+$gutter;
 
  min-height: 400px;
  text-align: center;
  background-size: 1280px auto;    

  @media #{$breakpoint-md-up} {
    text-align: left;
    background-position: 440px 0;    
  }
      
 }
 
  .fc-features {
    z-index: 5;
    position: relative;
    margin-bottom: $gutter*3 !important;
   

    &.feature-list {
      // undo grid for mobile
      @media #{$breakpoint-xs-only} {   
        display: block;     
      }

      @media #{$breakpoint-sm-up} {   
        grid-template-columns: 1fr 1fr 1fr;
//         margin-top: 0-($gutter*6);
      }
    } 
  }
 
  .health-analysis {
   @extend %dotty-bg;
   @include col-offset(md, 1);
   padding: $gutter*3 0;
   
   .fc-text-content h2 {
     text-align: left;
   }
   &::before {
      height: 200%; // Go down to over the next section
   }
  }

 	.qodef-content-inner .qodef-container .cta-block {
    margin-top: $gutter*3;margin-bottom: $gutter*3;
  }
   
  .customer-block {
    @include has-full-pseudo(true);
    margin-bottom: 0 !important;
    
    &::before {
      @include brand-gradient('light');
    }
  

    padding: $gutter*4 0;

    justify-content: center;
    .fc-teaser-grid__items {
      align-items: center;
      text-align: center;
      padding: $gutter 0;
     
      &.slick-slider{
    		.slick-list {
    			.slick-slide {
    				margin-left: 10px;
    				margin-right: 10px;
    				img {
    					max-width: 175px;
    					filter:grayscale(1);
    				}
    		  }
    		}
	    }	   

     // Move this later to its own post type css
     .slick-track {
       display: flex;
       align-items: center;       
     }
     .teaser {
       img {
         margin: 0 auto;
       }
     }
     
   }
 }
 
 .fc-text-content {
   h2 {
     text-align: center;
   }
   &.free-quote{
     
     padding-bottom: $gutter*4;
     padding-top: $gutter*4;
     margin-bottom: 0 !important; // so pattern doesn't show at bottom
	    @media #{$breakpoint-xs-only} {
 
//        	overflow: hidden;
        }
	    @media #{$breakpoint-sm-only} {
//	        overflow: hidden;
	    }
/*
	    @media #{$breakpoint-sm-dn} {
		    margin-left: -20px;
        	margin-right: -20px;
        	margin-bottom: 0;
	    }
*/
	    	    
   }
 }
  
 .product-intro {
    @media #{$breakpoint-md-up} {   
      @include col-offset('md',2.5);
      @include col(7);  
  }

  h2 {
    padding-bottom: 0;
  }  
  p {
    text-align: center;    
  }
  
  margin-bottom: $gutter*2;
  
 }
 
 
 .product-features.fc-features {
 	position: relative;
 	
   @media #{$breakpoint-md-up} {
     @include col-offset('md', 1);
     @include col(10);
  }
   
   @include shadowed(-1px, 7px, 15px, rgba(0,0,0,.24));
   @include borders(curved, transparent);      
   
   margin-bottom: 80px;

   
   /* Use css grid to make the gridlines */
   background: $brand-lighter-gray;
   @media #{$breakpoint-xs-only}{
	   background: $brand-white;
	   box-shadow: none;
   }
   grid-gap: 1px;   
  
   @media #{$breakpoint-xs-only} {
	  margin-bottom: $gutter*1.5;
   }
  
  
   .fc-features--feature {
     background: $brand-white;
     
     
     text-align: center;
     z-index: 1;
     @media #{$breakpoint-sm-up} {
	     text-align: left;
	     box-shadow: none;
     }
     
     .fc-features--feature__title {
       min-height: 80px; // needed since one of them ran to two lines; this keeps everything lined up and avoids bouncing.
     }
     .fc-features--feature--icon {
       width: 62px;
       height: 62px;
     }
     
     .fc-features--feature__content {      
       @extend %tight-text;
       
       &::after {
         @include pseudo();
         @extend %button;
         display: inline-block;                   
         position: static;
         visibility: hidden;
         margin: 0 auto;
         padding: $gutter $gutter*2;
         line-height: 1em;
         content: "Learn More";
         color: $brand-blue;
         background: $brand-white;
        }
      }
      
      a {
        color: $brand-gray;
        &:hover {
          text-decoration: none;
        }
      }
      
     .fc-features--feature__content:hover::after {
      background: darken($brand-white, 5%);
      color: $brand-blue;
     }
     
     @extend %grow-on-hover;
     &:hover {
       @extend %hover-gradient;
       @media #{$breakpoint-md-up} {
       
         @include borders(curved);
         cursor: pointer; 
         border-top-left-radius: 0;
         border-top-right-radius: 0;       
  /*
         width: calc(100%+$gutter);
         margin-left: 0-($gutter*.5);
         height: calc(100%+$gutter);
         margin-bottom:0-($gutter*.5);
  */
         z-index: 2;
  
         .fc-features--feature--icon {
           display: none;
         }
  
         .fc-features--feature--inner {
//          padding: 30px $gutter*.5; /* need to offset the add'l height/width to avoid bouncing */         
          
         }
  
         .fc-features--feature__content::after {
           visibility: visible;
          }
        }
     }
     
   }
 }
 
 .fc-portfolio-view {
   padding: 0;     
   &__items {   
     grid-column-gap: 0;
     
     & > div {
       background-size: cover;
     }
     @for $count from 1 through 3 {
        & > div:nth-child(#{$count}) {
          background-image: url(../img/hp-feature-#{$count}.png);
          background-color: nth($alternating-colors, $count);
        }       
     }    
    
    &--item {
      @extend %grow-on-hover;      
    }     
   }
   
   .portfolio-item--teaser {   
     
     // undo all the regular teaser stuff
      &::before, &::after {
        display: none;
      }
      box-shadow: none;
      
      padding: $gutter*3;
      
      .portfolio-item--teaser--inner {
        padding: 0;
      }
      
     * {
       @extend %no-hover;       
       color: $brand-white; 
       &:hover { color: $brand-white; }
     }

     &:hover .portfolio-item--teaser--inner {
       padding: inherit;
       .portfolio-item-category { display: block; }
       .portfolio-item-title { font-weight: inherit; }
     }
     
     .portfolio-item-category {
       position: static;
       @extend %font-special;
       letter-spacing: .25em; 
       font-size: 14px;
       margin-bottom: $gutter;
            
       text-transform: uppercase;     
       background: none;
       &::before {
         display: inline;
         content: "Featured "
       }
       
       
     }
   }   
 }
 
   .free-quote {     
    @include has-full-pseudo();

    &::before {
      background: white;
    } 
    
    .fc-text-content__container {

      @include borders(curved, transparent);      
      @include shadowed(-1px, 7px, 15px, rgba(0,0,0,.24));
      padding: $gutter*2;

      &::after {
        @include pseudo();
        width: 100%;
        height: 100%;
        margin: -$gutter*2; // offset 
        
        background: transparent url(../img/hero-dots.png) !important;           
        border-radius: inherit;
        z-index: -1;
        opacity: .2;
      }
    }
    
    
  /*
     position: relative;
     min-height: 200px;
     margin-bottom: 0 !important;
     padding-top: $gutter*5;
          
     @media #{$breakpoint-lg-up} {              
       margin-top: 25vh; // space for the slant
       padding-top: 0; // doesn't need padding when it has the slant.
     }    
  */  
   h2 {
     padding-bottom: 0; 
     margin-bottom: $gutter;
   }
  
  /*
   &::before {
     @include pseudo();
     width: 200%;
     left: -50%;
     top: 0;
     z-index: 0;
     height: 100%;
     background: linear-gradient(-128deg, rgba(160,205,78,0.04) 0%, #57A72F 60%), url(../img/free-quote-bg.png);                     
     background-position: left;
     background-size: cover;
     background-repeat: no-repeat;
     
     @media #{$breakpoint-lg-up} {              
       top: -25vh;       
       height: 100vh;
       clip-path: polygon(0 25vh, 100% 0, 100% 100%, 0% 100%);              
     }
    }
  */
  
  
     
   .fc-text-content__title, &--inner {
     position: relative;
     z-index: 2;
     text-align: center;
//     color: white;
   }
 
   .fc-text-content__container {
     position: relative;
     z-index: 2;
   }
  }
  .hovered-feature +  .free-quote {
	   .free-quote--shape { 
		  // top: calc(-200% - 65px);
	   }
  }

   .qodef-content {
     background: transparent; // so we can do our green triangle
   }
   > .qodef-wrapper {       
     position: relative;     
   }
}
